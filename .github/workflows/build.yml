name: Build IvanorProScan (Windows x86)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.7 (x86)
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"
          architecture: "x86"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller==4.10 ezdxf==0.17.2

      - name: Find Python DLLs
        id: find-dlls
        run: |
          $pythonDir = Split-Path -Path (Get-Command python).Path
          $dlls = @(
              "$pythonDir\python37.dll",
              "$pythonDir\DLLs\tcl86t.dll",
              "$pythonDir\DLLs\tk86t.dll",
              "$pythonDir\DLLs\_tkinter.pyd",
              "$pythonDir\DLLs\_ctypes.pyd",
              "$pythonDir\DLLs\_ssl.pyd"
          )
          
          $existingDlls = $dlls | Where-Object { Test-Path $_ }
          if ($existingDlls.Count -eq 0) {
              echo "::error::No DLLs found in $pythonDir"
              exit 1
          }
          
          echo "Found DLLs:"
          $existingDlls | ForEach-Object { echo $_ }
          
          # Сохраняем пути через JSON для корректной передачи
          $dllMapping = $existingDlls | ForEach-Object {
              "$($_);."
          }
          echo "dll_mapping=$($dllMapping -join ' ')" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Build EXE
        shell: cmd
        run: |
          pyinstaller ^
            --onefile ^
            --windowed ^
            --name IvanorProScan ^
            --icon=IMG_8028.ico ^
            ${{ steps.find-dlls.outputs.dll_mapping }} ^
            --add-data "venv/Lib/site-packages/ezdxf;ezdxf" ^
            GovnaPiroga.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: IvanorProScan-Win7-Full
          path: dist/IvanorProScan.exe
